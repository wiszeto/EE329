
#include "main.h"
#include "delay.h"
#include "lcd.h"
#include <stdint.h>
void SystemClock_Config(void);

int main(void)
{

  HAL_Init();
  SystemClock_Config();
  SysTick_Init();

  // enable clock on GPIOC

  	 LCD_init();
  	lcd_put_cur(0, 0);
  	 write('G');
  	lcd_put_cur(0, 1);
  	write('G');
  	lcd_put_cur(0, 2);
  	delay_us(50000000);
  	lcd_put_cur(0, 3);
  	write('G');
//   lcd_put_cur(0, 0);
//   lcd_send_string("HELLO ");
//   lcd_send_string("WORLD ");
//   lcd_send_string("FROM");
//   HAL_Delay(1000);
//   lcd_put_cur(1, 0);
//   lcd_send_string("CONTROLLERSTECH");
//   HAL_Delay(2000);
//   lcd_clear();

   while (1) {

   }

}


void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};


  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
  {
    Error_Handler();
  }


  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
  RCC_OscInitStruct.MSICalibrationValue = 0;
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  {
    Error_Handler();
  }


  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
  {
    Error_Handler();
  }
}

void Error_Handler(void)
{

  __disable_irq();
  while (1)
  {
  }

}

#ifdef  USE_FULL_ASSERT

void assert_failed(uint8_t *file, uint32_t line)
{

}
#endif
