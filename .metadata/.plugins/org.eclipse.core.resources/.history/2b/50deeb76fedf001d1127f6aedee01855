
#include "lcd.h"
#include "delay.h"

void LCD_init(void)
{
delay_us( 100000 ); // power-up wait 40 ms
RCC->AHB2ENR |= (RCC_AHB2ENR_GPIOAEN); // enable GPIOA clock on bus

//Making control pins output mode bits(01)
control_pins->MODER &= ~(GPIO_MODER_MODE1 | GPIO_MODER_MODE2 | GPIO_MODER_MODE3 | GPIO_MODER_MODE4 | GPIO_MODER_MODE5 | GPIO_MODER_MODE6 | GPIO_MODER_MODE7); // clear bits for PA
control_pins->MODER |= (GPIO_MODER_MODE1_0 |GPIO_MODER_MODE2_0 | GPIO_MODER_MODE3_0 |GPIO_MODER_MODE4_0 | GPIO_MODER_MODE5_0 | GPIO_MODER_MODE6_0 | GPIO_MODER_MODE7_0); // set up DB4 to DB7, RS, RW, E as outputs
control_pins->OTYPER &= ~(GPIO_OTYPER_OT1 | GPIO_OTYPER_OT2 | GPIO_OTYPER_OT3 | GPIO_OTYPER_OT4| GPIO_OTYPER_OT5| GPIO_OTYPER_OT6| GPIO_OTYPER_OT7);
control_pins->OSPEEDR |= ((3 << GPIO_OSPEEDR_OSPEED1_Pos) | (3 << GPIO_OSPEEDR_OSPEED2_Pos)| (3 << GPIO_OSPEEDR_OSPEED3_Pos)| (3 << GPIO_OSPEEDR_OSPEED4_Pos)| (3 << GPIO_OSPEEDR_OSPEED5_Pos)| (3 << GPIO_OSPEEDR_OSPEED6_Pos)| (3 << GPIO_OSPEEDR_OSPEED7_Pos));
control_pins->BRR = ( D4 | D5 | D6 | D7 | EN | RW | RS ); //Initializes data to all 0

//delay_us( 100000 ); // power-up wait 40 ms
//
//GPIOA->BRR = (GPIO_PIN_1 | GPIO_PIN_2); // set RS and RW to zero
//GPIOA->BRR = (GPIO_PIN_11 | GPIO_PIN_12);//set DB7.DB4 = 0x3. (DB6,7->0)
//GPIOA->BSRR = (GPIO_PIN_9 | GPIO_PIN_10);// (DB4,5 ->1)
//GPIOA->BSRR = (GPIO_PIN_4); //set En=1
//delay_us(1);//delay 1
//GPIOA->BRR = (GPIO_PIN_4); //set En to 0
//delay_us(37); // create a delay
//LCD_command(0x28); //commands
//delay_us(37);
//LCD_command(0x28);
//delay_us(37);
//LCD_command(0x0F);
//delay_us(37);
//LCD_command(0x01);
//delay_us(1000);
//delay_us(600);
//LCD_command(0x06);
//delay_us(37);
return;
}
