
#include <lcd.h>
#include "delay.h"

int P1;
int P3;
int D_I ;
int R_W ;
int E ;

void command(char i);
void write(char i);
void Nybble();
void init();


void command(char i)
{
P1 = i; //put data on output Port
D_I =0; //D/I=LOW : send instruction
R_W =0; //R/W=LOW : Write
Nybble(); //Send lower 4 bits
i = i<<4; //Shift over by 4 bits
P1 = i; //put data on output Port
Nybble(); //Send upper 4 bits
}
/**********************************************************/
void write(char i)
{
P1 = i; //put data on output Port
D_I =1; //D/I=HIGH : send data
R_W =0; //R/W=LOW : Write
Nybble(); //Clock lower 4 bits
i = i<<4; //Shift over by 4 bits
P1 = i; //put data on output Port
Nybble(); //Clock upper 4 bits
}
/**********************************************************/
void Nybble()
{
E = 1;
delay_us(100); //enable pulse width >= 300ns
E = 0; //Clock enable: falling edge
}
/**********************************************************/
void init()
{
	for (int i=0; i<40; i++)
	delay_us(1000); // create a delay
	GPIOA->BRR = (GPIO_PIN_0 | GPIO_PIN_1); // set RS and RW to zero
	GPIOA->BRR = (GPIO_PIN_11 | GPIO_PIN_12);//set DB7.DB4 = 0x3. (DB
	6,7->0)
	GPIOA->BSRR = (GPIO_PIN_9 | GPIO_PIN_10);// (DB4,5 ->1)
	GPIOA->BSRR = (GPIO_PIN_4); //set En=1
	delay_us(1);//delay 1
	GPIOA->BRR = (GPIO_PIN_4); //set En to 0
	delay_us(37); // create a delay
	LCD_command(0x28); //commands
	delay_us(37);
	LCD_command(0x28);
	delay_us(37);
	LCD_command(0x0F);
	delay_us(37);
	LCD_command(0x01);
	delay_us(1000);
	delay_us(600);
	LCD_command(0x06);
	delay_us(37);
	return;
}

